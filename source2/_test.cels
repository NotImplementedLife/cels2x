package A begin
	multiframe function f(x:int):int begin
		return x;
	end;

	multiframe function main():int begin
		var y=7;
		return (lambda (q:int) => (f(2)+q))(y);
	end;

	/*multiframe function main():int begin
		var x:int = 2;
		var q = (lambda (y:int):int => 
			begin 
				var z = f(x+y);
				return z;
			end)(2);
		return q;
	end;*/
end;

/*package A begin
	package B begin
		multiframe function gcd(a:int, b:int):int
		begin
			while b>0 do
			begin
				var r:int;
				r=a%b;
				a=b;
				b=r;
				suspend;
			end;
			
			return a;
		end;
		
		var z:int;
		
		multiframe function main():int
		begin
			var x:int = 1;
			
			while gcd(x, 24)!= 8 do
			begin
				x = x+1;
			end;
						
			return x;
		end;
	end;
	
	function w():int begin
		var x:int = 2;
		(lambda (y:int) => (x+y))(2);
	end;
end;
*/